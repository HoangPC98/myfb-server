import {MigrationInterface, QueryRunner} from "typeorm";

export class userFrindUser1672681566090 implements MigrationInterface {
    name = 'userFrindUser1672681566090'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE \`users_friends_users\` (\`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deletedAt\` datetime(6) NULL, \`id\` int NOT NULL AUTO_INCREMENT, \`user_id_1\` int NOT NULL, \`user_id_2\` int NOT NULL, \`status\` enum ('pending', 'friend', 'block', 'unfriend', 'follow') NULL DEFAULT 'pending', PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` CHANGE \`id\` \`id\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` DROP PRIMARY KEY`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` DROP COLUMN \`id\``);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` DROP COLUMN \`user_id_2\``);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` DROP COLUMN \`status\``);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` ADD \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` ADD \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` ADD \`id\` int NOT NULL PRIMARY KEY AUTO_INCREMENT`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` ADD \`user_id_2\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` ADD \`status\` enum ('pending', 'friend', 'block', 'unfriend', 'follow') NULL DEFAULT 'pending'`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` ADD \`usersId\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` CHANGE \`usersId\` \`id\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` DROP PRIMARY KEY`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` ADD PRIMARY KEY (\`id\`, \`usersId\`)`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` CHANGE \`id\` \`usersId\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`user_sessions\` CHANGE \`deletedAt\` \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`user_sessions\` CHANGE \`user_id\` \`user_id\` int NULL`);
        await queryRunner.query(`ALTER TABLE \`user_sessions\` CHANGE \`flag\` \`flag\` int NULL`);
        await queryRunner.query(`ALTER TABLE \`user_sessions\` CHANGE \`user_agent\` \`user_agent\` varchar(255) NULL`);
        await queryRunner.query(`ALTER TABLE \`user_sessions\` CHANGE \`token\` \`token\` varchar(255) NULL`);
        await queryRunner.query(`ALTER TABLE \`notifications\` CHANGE \`deletedAt\` \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`notifications\` CHANGE \`entity_id\` \`entity_id\` int NULL`);
        await queryRunner.query(`ALTER TABLE \`notifications\` CHANGE \`entity_type\` \`entity_type\` enum ('friend_ships', 'posts', 'reactions', 'photos', 'comments', 'users', 'profiles', 'privacy') NULL`);
        await queryRunner.query(`ALTER TABLE \`notifications\` CHANGE \`notify_type\` \`notify_type\` enum ('add friend request', 'accept', 'has react', 'has comment') NULL`);
        await queryRunner.query(`ALTER TABLE \`notification_receives\` CHANGE \`deletedAt\` \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`notification_receives\` CHANGE \`user_id\` \`user_id\` int NULL`);
        await queryRunner.query(`ALTER TABLE \`privacy\` CHANGE \`deletedAt\` \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`profiles\` CHANGE \`deletedAt\` \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`profiles\` CHANGE \`relationship_status\` \`relationship_status\` enum ('single', 'dating', 'married') NULL`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`deletedAt\` \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`gender\` \`gender\` enum ('male', 'female', 'other') NULL`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`cover_photo_url\` \`cover_photo_url\` varchar(255) NOT NULL`);
        await queryRunner.query(`DROP INDEX \`IDX_97672ac88f789774dd47f7c8be\` ON \`users\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP COLUMN \`email\``);
        await queryRunner.query(`ALTER TABLE \`users\` ADD \`email\` varchar(255) NULL`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD UNIQUE INDEX \`IDX_97672ac88f789774dd47f7c8be\` (\`email\`)`);
        await queryRunner.query(`ALTER TABLE \`users\` DROP COLUMN \`phone_number\``);
        await queryRunner.query(`ALTER TABLE \`users\` ADD \`phone_number\` varchar(255) NULL`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD UNIQUE INDEX \`IDX_17d1817f241f10a3dbafb169fd\` (\`phone_number\`)`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`profileUserId\` \`profileUserId\` int NULL`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`privacyUserId\` \`privacyUserId\` int NULL`);
        await queryRunner.query(`ALTER TABLE \`photos\` CHANGE \`deletedAt\` \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`photos\` CHANGE \`photo_type\` \`photo_type\` enum ('profile', 'avatar', 'cover', 'post') NULL`);
        await queryRunner.query(`ALTER TABLE \`reactions\` CHANGE \`deletedAt\` \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`posts\` CHANGE \`deletedAt\` \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`comments\` CHANGE \`deletedAt\` \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` CHANGE \`id\` \`id\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` DROP PRIMARY KEY`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` ADD PRIMARY KEY (\`id\`, \`usersId\`, \`user_id_1\`)`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` CHANGE \`id\` \`id\` int NOT NULL AUTO_INCREMENT`);
        await queryRunner.query(`CREATE INDEX \`IDX_179ca9cf309c6f3f62f28eeaa0\` ON \`users_friends_users\` (\`user_id_1\`)`);
        await queryRunner.query(`CREATE INDEX \`IDX_dd95c3f3d450ad162847e629e0\` ON \`users_friends_users\` (\`usersId\`)`);
        await queryRunner.query(`ALTER TABLE \`user_sessions\` ADD CONSTRAINT \`FK_e9658e959c490b0a634dfc54783\` FOREIGN KEY (\`user_id\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`notification_receives\` ADD CONSTRAINT \`FK_8b763e10d128342b7f1dab8c470\` FOREIGN KEY (\`user_id\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD CONSTRAINT \`FK_7da77968af7f79a98e4b28bb9d4\` FOREIGN KEY (\`profileUserId\`) REFERENCES \`profiles\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD CONSTRAINT \`FK_505172424dcd411ba576478d4e1\` FOREIGN KEY (\`privacyUserId\`) REFERENCES \`privacy\`(\`user_id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` ADD CONSTRAINT \`FK_179ca9cf309c6f3f62f28eeaa0c\` FOREIGN KEY (\`user_id_1\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` ADD CONSTRAINT \`FK_dd95c3f3d450ad162847e629e06\` FOREIGN KEY (\`usersId\`) REFERENCES \`users\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` DROP FOREIGN KEY \`FK_dd95c3f3d450ad162847e629e06\``);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` DROP FOREIGN KEY \`FK_179ca9cf309c6f3f62f28eeaa0c\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP FOREIGN KEY \`FK_505172424dcd411ba576478d4e1\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP FOREIGN KEY \`FK_7da77968af7f79a98e4b28bb9d4\``);
        await queryRunner.query(`ALTER TABLE \`notification_receives\` DROP FOREIGN KEY \`FK_8b763e10d128342b7f1dab8c470\``);
        await queryRunner.query(`ALTER TABLE \`user_sessions\` DROP FOREIGN KEY \`FK_e9658e959c490b0a634dfc54783\``);
        await queryRunner.query(`DROP INDEX \`IDX_dd95c3f3d450ad162847e629e0\` ON \`users_friends_users\``);
        await queryRunner.query(`DROP INDEX \`IDX_179ca9cf309c6f3f62f28eeaa0\` ON \`users_friends_users\``);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` CHANGE \`id\` \`id\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` DROP PRIMARY KEY`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` ADD PRIMARY KEY (\`id\`, \`usersId\`)`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` CHANGE \`id\` \`id\` int NOT NULL AUTO_INCREMENT`);
        await queryRunner.query(`ALTER TABLE \`comments\` CHANGE \`deletedAt\` \`deletedAt\` datetime(6) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`posts\` CHANGE \`deletedAt\` \`deletedAt\` datetime(6) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`reactions\` CHANGE \`deletedAt\` \`deletedAt\` datetime(6) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`photos\` CHANGE \`photo_type\` \`photo_type\` enum ('profile', 'avatar', 'cover', 'post') NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`photos\` CHANGE \`deletedAt\` \`deletedAt\` datetime(6) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`privacyUserId\` \`privacyUserId\` int NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`profileUserId\` \`profileUserId\` int NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`users\` DROP INDEX \`IDX_17d1817f241f10a3dbafb169fd\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP COLUMN \`phone_number\``);
        await queryRunner.query(`ALTER TABLE \`users\` ADD \`phone_number\` varchar(13) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`users\` DROP INDEX \`IDX_97672ac88f789774dd47f7c8be\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP COLUMN \`email\``);
        await queryRunner.query(`ALTER TABLE \`users\` ADD \`email\` varchar(50) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`IDX_97672ac88f789774dd47f7c8be\` ON \`users\` (\`email\`)`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`cover_photo_url\` \`cover_photo_url\` varchar(255) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`gender\` \`gender\` enum ('male', 'female', 'other') NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`deletedAt\` \`deletedAt\` datetime(6) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`profiles\` CHANGE \`relationship_status\` \`relationship_status\` enum ('single', 'dating', 'married') NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`profiles\` CHANGE \`deletedAt\` \`deletedAt\` datetime(6) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`privacy\` CHANGE \`deletedAt\` \`deletedAt\` datetime(6) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`notification_receives\` CHANGE \`user_id\` \`user_id\` int NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`notification_receives\` CHANGE \`deletedAt\` \`deletedAt\` datetime(6) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`notifications\` CHANGE \`notify_type\` \`notify_type\` enum ('add friend request', 'accept', 'has react', 'has comment') NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`notifications\` CHANGE \`entity_type\` \`entity_type\` enum ('friend_ships', 'posts', 'reactions', 'photos', 'comments', 'users', 'profiles', 'privacy') NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`notifications\` CHANGE \`entity_id\` \`entity_id\` int NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`notifications\` CHANGE \`deletedAt\` \`deletedAt\` datetime(6) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`user_sessions\` CHANGE \`token\` \`token\` varchar(255) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`user_sessions\` CHANGE \`user_agent\` \`user_agent\` varchar(255) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`user_sessions\` CHANGE \`flag\` \`flag\` int NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`user_sessions\` CHANGE \`user_id\` \`user_id\` int NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`user_sessions\` CHANGE \`deletedAt\` \`deletedAt\` datetime(6) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` CHANGE \`usersId\` \`id\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` DROP PRIMARY KEY`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` ADD PRIMARY KEY (\`id\`)`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` CHANGE \`id\` \`usersId\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` DROP COLUMN \`usersId\``);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` DROP COLUMN \`status\``);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` DROP COLUMN \`user_id_2\``);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` DROP COLUMN \`id\``);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` ADD \`status\` enum ('pending', 'friend', 'block', 'unfriend', 'follow') NULL DEFAULT 'pending'`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` ADD \`user_id_2\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` ADD \`id\` int NOT NULL AUTO_INCREMENT`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` ADD PRIMARY KEY (\`id\`)`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` CHANGE \`id\` \`id\` int NOT NULL AUTO_INCREMENT`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` ADD \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`users_friends_users\` ADD \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`DROP TABLE \`users_friends_users\``);
    }

}
